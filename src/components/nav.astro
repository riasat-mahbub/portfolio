---
interface NavItem {
  label: string;
  href: string;
  icon: string;
}

const navItems: NavItem[] = [
  { label: "Home", href: "#home", icon: `<svg ...></svg>` },
  { label: "Projects", href: "#projects", icon: `<svg ...></svg>` },
  { label: "Experience", href: "#experience", icon: `<svg ...></svg>` },
  { label: "Education", href: "#education", icon: `<svg ...></svg>` },
  { label: "Connect", href: "#connect", icon: `<svg ...></svg>` },
];
---

<div class="flex justify-center w-full">
  <nav id="main-nav" class="fixed left-1/2 -translate-x-1/2 z-[100] bg-[var(--background)] border border-transparent backdrop-blur-xl transition-all duration-500 ease-in-out md:top-6 md:bottom-auto bottom-0 px-4 py-2 rounded-full">
    <div class="container mx-auto flex justify-center items-center">
      <ul class="flex gap-6 md:gap-12 justify-center overflow-x-auto scrollbar-hide">
        {
          navItems.map((item) => (
            <li class="flex-0">
              <a
                href={item.href}
                class="flex flex-col items-center gap-1 text-[var(--white-icon)] transition-colors text-xs md:text-base relative group"
              >
                <div class="absolute -left-6 top-1/2 -translate-y-1/2 w-2 h-2 rounded-full transition-all duration-300 scale-0 opacity-0 bg-[#A9FF5B] nav-indicator hidden md:block" />
                <span class="md:hidden flex items-center justify-center w-6 h-6">
                  <fragment set:html={item.icon} />
                </span>
                <span class="hidden md:inline-block">{item.label}</span>
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </nav>
</div>

<script>
  const nav = document.getElementById("main-nav");
  const maxScroll = 1000;
  let rafId = null;

  // Smooth scroll
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener("click", function(e) {
      e.preventDefault();
      const targetId = this.getAttribute("href").substring(1);
      const targetEl = document.getElementById(targetId);
      if (targetEl) targetEl.scrollIntoView({ behavior: "smooth" });
    });
  });

  // Scroll shrink effect
  function updateNav() {
    if (window.scrollY > 0) {
      nav?.classList.add("scrolling");

      const scrollProgress = Math.min(window.scrollY / maxScroll, 1);
      const easeProgress = 1 - Math.pow(1 - scrollProgress, 4);

      const minWidth = 680; // wider for more items
      const maxWidth = Math.min(window.innerWidth * 0.9, 1200);
      const currentWidth = maxWidth - (maxWidth - minWidth) * easeProgress;

      nav?.style.setProperty("width", `${currentWidth}px`);
    } else {
      nav?.classList.remove("scrolling");
      nav?.style.setProperty("width", "auto");
    }
    rafId = null;
  }

  window.addEventListener("scroll", () => {
    if (!rafId) rafId = requestAnimationFrame(updateNav);
  }, { passive: true });

  // Active section highlight
  document.addEventListener("DOMContentLoaded", () => {
    const sections = document.querySelectorAll("section[id]");
    const navLinks = document.querySelectorAll("nav a[href^='#']");

    const observer = new IntersectionObserver(
      entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            navLinks.forEach(link => link.classList.remove("active"));
            const activeLink = document.querySelector(`nav a[href="#${entry.target.id}"]`);
            if (activeLink) activeLink.classList.add("active");
          }
        });
      },
      { threshold: 0.6 }
    );

    sections.forEach(section => observer.observe(section));
  });
</script>

<style>
  nav {
    transform: translateX(-50%);
    transition: background-color 0.3s ease, border-radius 0.3s ease, border-color 0.3s ease, width 0.3s ease;
  }

  nav.scrolling {
    background-color: var(--component-bg);
    border-color: #ffffff10;
  }

  nav a.active .nav-indicator {
    transform: translateY(-50%) scale(1);
    opacity: 1;
  }

  nav a.active {
    color: white !important;
  }

  @media (max-width: 1024px) {
    nav ul {
      overflow-x: auto;
      gap: 1rem;
    }

    nav li {
      flex: 0 0 auto;
    }

    .scrollbar-hide::-webkit-scrollbar {
      display: none;
    }

    .scrollbar-hide {
      -ms-overflow-style: none;
      scrollbar-width: none;
    }
  }

  @media (max-width: 767px) {
    nav {
      width: 100% !important;
      border-radius: 1rem 1rem 0 0;
    }

    body {
      padding-bottom: 70px;
    }

    nav a {
      font-size: 0.75rem;
    }
  }
</style>
